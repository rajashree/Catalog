<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       default-init-method="init" default-destroy-method="destroy"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd

	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- DAO declarations-->
    <!-- we are using org.springframework.stereotype.Repository to register all our Repositories -->
    <bean id="repositoryImpl" class="com.bmsils.core.persistence.repository.constructs.impl.RepositoryImpl"
          abstract="true">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>

    <context:component-scan base-package="com.bmsils.gcn.persistence.repository.impl">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <!-- -->
    <!-- == JPA / Hibernate Session Managers == -->
    <!-- -->
    <bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <array>
                <value>com.bmsils.gcn.persistence.domain</value>
            </array>
        </property>

        <property name="hibernateProperties">
            <props>

                <!-- value="create" to build a new database on each run; value="update" to modify an existing database; value="create-drop"
means the same as "create" but also drops tables when Hibernate closes; value="validate" makes no changes to the database -->
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.jdbc.batch_size">100</prop>
                <!--<prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>-->
                <!--<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>-->
                <!--<prop key="hibernate.cache">true</prop>-->
                <!--<prop key="hibernate.cache.use_second_level_cache">true</prop>-->
                <!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
                <!--<prop key="net.sf.ehcache.configurationResourceName">/ehcache-orm.xml</prop>-->
                <prop key="hibernate.generate_statistics">false</prop>
                <!-- Uncomment the following two properties for JBoss only -->
                <!--<prop key="hibernate.validator.apply_to_ddl">false</prop>-->
                <!--<prop key="hibernate.validator.autoregister_listeners">false</prop>-->
                <!-- this property is ignored as we use spring to handle transactions -->
                <!--<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>-->

            </props>
        </property>
    </bean>


    <!-- ========= Transactions =========-->
    <!-- == TRANSACTIONS == -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" mode="proxy"/>

</beans>
